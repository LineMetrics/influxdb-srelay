[global_tags]
[agent]
    interval = "60s"
    hostname = "$HOSTNAME"

# for linux metrics
[[outputs.influxdb]]
  urls = ["$MONITOR_HOST"] # required
  database = "$LINUX_MONITOR_DATABASE" # required
  tagexclude = ["ifx_db"]
  [outputs.influxdb.tagpass]
  ifx_db = ["_linux"]

# for internal metrics
[[outputs.influxdb]]
  urls = ["$MONITOR_HOST"] # required
  database = "$TELEGRAF_MONITOR_DATABASE" # required
  tagexclude = ["ifx_db"]
  [outputs.influxdb.tagpass]
  ifx_db = ["_telegraf"]

# for docker metrics
[[outputs.influxdb]]
  urls = ["$MONITOR_HOST"] # required
  database = "$DOCKER_MONITOR_DATABASE" # required
  tagexclude = ["ifx_db"]
  [outputs.influxdb.tagpass]
  ifx_db = ["_docker"]

[[inputs.internal]]
  [inputs.internal.tags]
  client = "$CLIENT_NAME"
  output = "$OUTPUT_TYPE"
  ifx_db = "_telegraf"

[[inputs.net]]
 [inputs.net.tags]
 ifx_db = "_linux"
 
[[inputs.cpu]]
    percpu = true
    totalcpu = true
    collect_cpu_time = false
    report_active = true
 [inputs.cpu.tags]
 ifx_db = "_linux"
 
[[inputs.disk]]
    ignore_fs = ["tmpfs", "devtmpfs", "devfs","iso9660","overlay","aufs","squashfs"]
 [inputs.disk.tags]
 ifx_db = "_linux"
 
[[inputs.diskio]]
 [inputs.diskio.tags]
 ifx_db = "_linux"
 
[[inputs.kernel]]
 [inputs.kernel.tags]
 ifx_db = "_linux"
 
[[inputs.mem]]
 [inputs.mem.tags]
 ifx_db = "_linux"
 
[[inputs.processes]]
 [inputs.processes.tags]
 ifx_db = "_linux"
 
[[inputs.swap]]
 [inputs.swap.tags]
 ifx_db = "_linux"
 
[[inputs.system]]
 [inputs.system.tags]
 ifx_db = "_linux"
 
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  container_names = []
  timeout = "5s"
  perdevice = true
  total = false
  docker_label_include = []
  docker_label_exclude = []
 [inputs.docker.tags]
 ifx_db = "_docker"